<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="HyangstaDAO">
	<!-- 유저 정보 -->
	<select id="getuser" parameterType="String" resultType="member">
		SELECT *
		FROM member
		WHERE user_id = #{user_id}
	</select>
	
	<!-- 홈 화면 포스트 출력 -->
	<select id="getMainHyPost" resultType="hyPost">
		SELECT * FROM
		(SELECT ROWNUM as rnum, hyp.*
		FROM ( SELECT hp.* , mem.user_fname_en FROM HYANGSTA_POST hp INNER JOIN member mem ON hp.user_id = mem.user_id
		ORDER BY hp.hpost_id DESC ) hyp
		)
		WHERE rnum between 1 and 6
	</select>

	<!-- 포스트 등록 -->
 	<insert id="insertHyPost" parameterType="hyPost">
 		INSERT INTO HYANGSTA_POST 
		( hpost_id, hp_date, hp_tag, hp_content, hp_fname, hp_fsize, hp_fname_en, hp_like, user_id
      	)  VALUES ( 
      	seq_hpost.nextval, sysdate, #{hp_tag}, #{hp_content}, #{hp_fname}, #{hp_fsize}, #{hp_fname_en}, 0, #{user_id}
    	)
 	</insert>
	
	<!-- 포스트 보기 -->
 	<select id="getHyPost" parameterType="hyPost" resultType="hyPost">
 		SELECT *
		FROM HYANGSTA_POST
		WHERE hpost_id = #{hpost_id}
 	</select>
 	
	<!-- 포스트 수정 -->
 	<update id="updateHyPost" parameterType="hyPost">
 		UPDATE HYANGSTA_POST
 		SET hp_content = #{hp_content}, hp_tag = #{hp_tag}
 		<if test="hp_fname_en !=null">
 			, hp_fname = #{hp_fname}, hp_fsize = #{hp_fsize}, hp_fname_en = #{hp_fname_en}
 		</if>
 		WHERE hpost_id = #{hpost_id}
 	</update>
 	
	<!-- 포스트 삭제 / 댓글도 같이 되야함 -->
 	<delete id="deleteHyPost" parameterType="hyPost">
 		DELETE FROM HYANGSTA_POST
 		WHERE hpost_id = #{hpost_id}
 	</delete>
	
	<!-- 팔로잉한 포스트 목록 조회  -->
 	<select id="getMyFowPostList" parameterType="hashmap" resultType="hyPost">
 		SELECT * FROM
		(SELECT ROWNUM as rnum, hyp.*
		FROM ( SELECT hp.* , mem.user_fname_en 
				FROM HYANGSTA_POST hp INNER JOIN member mem
				ON hp.user_id = mem.user_id
				WHERE hp.user_id IN (SELECT following_id FROM FOLLOW WHERE user_id = '${user_id}')
				<if test="searchKeyword != null and searchCondition == 'user_id'">
					AND hp.${searchCondition} like '%${searchKeyword}%'
				</if>
				<if test="searchKeyword != null and searchCondition == 'hp_tag'">
					AND hp.${searchCondition} like '%#${searchKeyword}#%' OR
					hp.${searchCondition} like '%#${searchKeyword}'
				</if>
				
				ORDER BY hp.hpost_id DESC) hyp 
		)
		WHERE rnum between ${sNum} and ${sNum}+14
 	</select>
 	
 	<!-- 팔로잉한 포스트 갯수 조회 -->
 	<select id="getHyFPostCnt" parameterType="hashmap" resultType="int">
 		SELECT count(*)
 		FROM HYANGSTA_POST hp
    	WHERE hp.user_id IN (SELECT following_id FROM FOLLOW WHERE user_id = #{user_id} )
    	<if test="searchKeyword != null and searchCondition == 'user_id'">
			AND hp.${searchCondition} like '%${searchKeyword}%'
		</if>
		<if test="searchKeyword != null and searchCondition == 'hp_tag'">
			AND hp.${searchCondition} like '%#${searchKeyword}#%' OR
			hp.${searchCondition} like '%#${searchKeyword}'
		</if>
 	</select>
 	
 	<!-- 유저 향스타 목록 -->
 	<select id="getUserHyPostList" parameterType="hyFollow" resultType="hyPost">
		SELECT * FROM
		(SELECT ROWNUM as rnum, hyp.*
		FROM ( SELECT hp.* , mem.user_fname_en 
				FROM HYANGSTA_POST hp INNER JOIN member mem
				ON hp.user_id = mem.user_id
				WHERE hp.user_id = #{user_id}
				ORDER BY hp.hpost_id DESC) hyp 
		)
		WHERE rnum between #{sNum} and #{sNum}+14
 	</select>
 	
 	<!-- 유저 향스타 포스트 갯수 조회 -->
 	<select id="getUserHyPostCnt" parameterType="hyFollow" resultType="int">
 		SELECT count(*)
		FROM HYANGSTA_POST
		WHERE user_id = #{user_id}
 	</select>
 	
	<!-- 홈 향스타 목록 -->
 	<select id="getHyPostList" parameterType="hashmap" resultType="hyPost">
 		SELECT * FROM
		(SELECT ROWNUM as rnum, hyp.*
		FROM ( SELECT hp.* , mem.user_fname_en FROM HYANGSTA_POST hp INNER JOIN member mem ON hp.user_id = mem.user_id
			<where>
				<if test="searchKeyword != null and searchCondition == 'user_id'">
					hp.${searchCondition} like '%${searchKeyword}%'
				</if>
				<if test="searchKeyword != null and searchCondition == 'hp_tag'">
					hp.${searchCondition} like '%#${searchKeyword}#%' OR
					hp.${searchCondition} like '%#${searchKeyword}'
				</if>
			</where>
			ORDER BY hp.hpost_id DESC ) hyp
		)
		WHERE rnum between ${sNum} and ${sNum}+14
 	</select>
 	
 	<!-- 홈 포스트 갯수 조회 -->
 	<select id="getHyPostCnt" parameterType="hashmap" resultType="int">
 		SELECT count(*)
 		FROM HYANGSTA_POST hp
 		<where>
			<if test="searchKeyword != null and searchCondition == 'user_id'">
				hp.${searchCondition} like '%${searchKeyword}%'
			</if>
			<if test="searchKeyword != null and searchCondition == 'hp_tag'">
				hp.${searchCondition} like '%#${searchKeyword}#%' OR
				hp.${searchCondition} like '%#${searchKeyword}'
			</if>
		</where>
 	</select>
 	
	<!-- 댓글 갯수 조회 -->
	<select id="getHyCommCnt" parameterType="hyPost" resultType="int">
 		SELECT count(*)
 		FROM HYANGSTA_COMM
 		WHERE hpost_id = #{hpost_id}
 	</select>

 	<!-- 댓글 조회 -->
 	<select id="getHyComm" parameterType="hyPost" resultType="hyComm">
 		SELECT *
 		FROM
 		( SELECT ROWNUM as rnum, hyc.*
		FROM ( SELECT * FROM HYANGSTA_COMM WHERE hpost_id = #{hpost_id} ORDER BY hcomment_id DESC) hyc
 		)
 		WHERE rnum between #{sNum} and #{sNum}+14
 	</select>
 	
 	<!-- 댓글 등록 -->
 	<insert id="saveHyComm" parameterType="hyComm">
 		INSERT INTO HYANGSTA_COMM 
		( hcomment_id, hpost_id, hc_date, hc_content, hc_user_id
      	)  VALUES ( 
      	seq_hcom.nextval, #{hpost_id}, sysdate, #{hc_content}, #{hc_user_id}
    	)
 	</insert>
 	
 	<!-- 댓글 수정 -->
	<update id="updateHyComm" parameterType="hyComm">
 		UPDATE HYANGSTA_COMM
 		SET hc_content = #{hc_content}, hc_date = sysdate
 		WHERE hcomment_id = #{hcomment_id}
 	</update>
 	
	<!-- 댓글 삭제 -->
 	<delete id="deleteHyComm" parameterType="hyComm">
 		DELETE FROM HYANGSTA_COMM
 		WHERE hcomment_id = #{hcomment_id}
 	</delete>
 
 	<!-- 팔로워 유저 목록 조회 >> 나를 팔로우 한 사람 -->
 	<select id="getHyFollower" parameterType="hyFollow" resultType="member">
		SELECT * FROM
	    (SELECT ROWNUM as rnum, hyf.*
	    FROM (SELECT * FROM MEMBER 
			WHERE user_id IN (SELECT user_id FROM FOllOW WHERE following_id = #{user_id} )) hyf
	    )
	    WHERE rnum BETWEEN #{sNum} and #{sNum}+19
 	</select>
 	
  	<!-- 팔로잉 유저 목록 조회 >> 내가 팔로우 한 사람 -->
 	<select id="getHyFollowing" parameterType="hyFollow" resultType="member">
		SELECT * FROM
	    (SELECT ROWNUM as rnum, hyf.*
	    FROM ( SELECT * FROM MEMBER
	          WHERE user_id IN (SELECT following_id FROM FOllOW WHERE user_id = #{user_id} ) ) hyf
	    )
	    WHERE rnum between #{sNum} and #{sNum}+19
 	</select>
 	
 	<!-- 팔로우 판단 // #following_id : 로그인 아이디, #user_id : 향스타 유저 아이디 담겨있음-->
 	<select id="getHyFollow" parameterType="hyFollow" resultType="hyFollow">
		SELECT *
		FROM FOLLOW
		WHERE user_id = #{user_id} AND following_id = #{following_id}
 	</select>
 	
 	<!-- 팔로우 등록 -->
 	<insert id="saveHyFollow" parameterType="hyFollow">
 		INSERT INTO FOLLOW 
		( following_id, user_id
      	)  VALUES ( 
      	#{following_id}, #{user_id}
    	)
 	</insert>
 	
 	<!-- 팔로워 수 증가 -->
 	<update id="updateFwerCntUp" parameterType="hyFollow">
 		UPDATE MEMBER
 		SET  h_follower = h_follower+1
 		WHERE user_id = #{following_id}
 	</update>
 	
 	<!-- 팔로잉 수 증가 -->
 	<update id="updateFingCntUp" parameterType="hyFollow">
 		UPDATE MEMBER
 		SET  h_following = h_following+1
 		WHERE user_id = #{user_id}
 	</update>
 	
 	<!-- 팔로우 취소-->
 	<delete id="deleteHyFollow" parameterType="hyFollow">
 		DELETE FROM FOLLOW
 		WHERE user_id = #{user_id} AND following_id = #{following_id}
 	</delete>
 	
 	<!-- 팔로워 수 감소 -->
 	<update id="updateFwerCntDown" parameterType="hyFollow">
 		UPDATE MEMBER
 		SET  h_follower = h_follower-1
 		WHERE user_id = #{following_id}
 	</update>
 	<!-- 팔로잉 수 감소 -->
 	<update id="updateFingCntDown" parameterType="hyFollow">
 		UPDATE MEMBER
 		SET  h_following = h_following-1
 		WHERE user_id = #{user_id}
 	</update>
 	
 	<!-- 좋아요 조회 -->
 	<select id="getHyLike" parameterType="hyPost" resultType="hyLike">
 		SELECT *
		FROM HYANGSTA_LIKE
		WHERE user_id = #{user_id} AND hpost_id = #{hpost_id}
 	</select>
 	
 	<!-- 좋아요 등록 -->
 	<insert id="saveHyLike" parameterType="hyPost">
 		INSERT INTO HYANGSTA_LIKE 
		( hpost_id, user_id
      	)  VALUES ( 
      	#{hpost_id}, #{user_id}
    	)
 	</insert>
 	
 	<!-- 좋아요 수 증가 -->
 	<update id="updateHyLikeUp" parameterType="hyPost">
 		UPDATE HYANGSTA_POST
 		SET hp_like = hp_like + 1
 		WHERE hpost_id = #{hpost_id}
 	</update>
 	
 	<!-- 좋아요 취소 -->
 	<delete id="deleteHyLike" parameterType="hyPost">
 		DELETE FROM HYANGSTA_LIKE
 		WHERE hpost_id = #{hpost_id} AND user_id = #{user_id}
 	</delete>
 	
 	<!-- 좋아요 수 감소 -->
 	<update id="updateHyLikeDown" parameterType="hyPost">
 		UPDATE HYANGSTA_POST
 		SET hp_like = hp_like - 1
 		WHERE hpost_id = #{hpost_id}
 	</update>
 	
 	<!-- 탈퇴시 팔로워 수 변화 >> 탈퇴유저가 팔로잉하고 있는 유저의 팔로워 수 변화 -->
 	<update id="deleteFollower" parameterType="member">
 		UPDATE member
		SET h_follower = h_follower-1
		WHERE user_id IN ( SELECT following_id FROM FOLLOW WHERE user_id = #{user_id} )
 	</update>
 	
 	<!-- 탈퇴시 팔로잉 수 변화 >> 탈퇴한 유저를 팔로잉 하고 있는 유저의 팔로잉 수 변화 -->
 	<update id="deleteFollowing" parameterType="member">
		UPDATE member
		SET h_following = h_following-1
		WHERE user_id IN ( SELECT user_id FROM FOLLOW WHERE following_id = #{user_id} )
 	</update>
 	
</mapper>